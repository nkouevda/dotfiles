[user]
	name = Nikita Kouevda
	email = nkouevda@gmail.com

[core]
	# This is the same as git's default if LESS is empty (`LESS=FRX less`),
	# but since LESS is not empty, we need to explicitly set this
	pager = less --quit-if-one-screen --Raw-control-chars --no-init

[log]
	date = iso

[grep]
	lineNumber = true

[diff]
	algorithm = patience
	renames = copies
	wsErrorHighlight = all

[merge]
	tool = vimdiff

[difftool]
	prompt = false
	trustExitCode = true

[difftool.pdiff]
	cmd = "pdiff -- \"$LOCAL\" \"$REMOTE\" | less --Raw-control-chars"

[am]
	threeWay = true

[fetch]
	prune = true

[pull]
	rebase = true

[push]
	default = upstream

[advice]
	statusHints = false
	detachedHead = false

[color.status]
	branch = cyan

[pretty]
	compact = "%C(auto)%h %C(blue)%ad %C(magenta)%aN %C(reset)%s"
	compact-decorate = "%C(auto)%h %C(blue)%ad %C(magenta)%aN%C(auto)%d %C(reset)%s"

[alias]
	st = status
	sts = status --short --branch
	rp = "!sh -c 'git rev-parse \"${@:-HEAD}\"' -"
	rpa = "!sh -c 'git rev-parse --abbrev-ref \"${@:-HEAD}\"' -"
	root = rev-parse --show-toplevel
	prefix = rev-parse --show-prefix
	br = branch
	brv = branch --verbose --verbose
	brc = branch --sort=committerdate
	brcv = branch --sort=committerdate --verbose --verbose
	bra = branch --all
	brav = branch --all --verbose --verbose
	brac = branch --all --sort=committerdate
	bracv = branch --all --sort=committerdate --verbose --verbose
	brf = branch --force
	brfm = branch --force master origin/master
	brm = branch --move
	brmf = branch --move --force
	brd = branch --delete
	brdf = branch --delete --force
	track = "!sh -c 'git branch --set-upstream-to origin/\"$(git rev-parse --abbrev-ref HEAD)\"' -"
	untrack = branch --unset-upstream
	pushup = "!sh -c 'git push --set-upstream origin \"$(git rev-parse --abbrev-ref HEAD)\"' -"
	deleteup = "!sh -c 'git push --delete origin \"$(git rev-parse --abbrev-ref HEAD)\"' -"
	sb = show-branch
	sba = show-branch --all
	mb = merge-base
	mbm = merge-base master
	lg = log --pretty=compact
	lgd = log --pretty=compact-decorate
	lgm = "!sh -c 'git log --pretty=compact ^master \"${@:-HEAD}\"' -"
	lgdm = "!sh -c 'git log --pretty=compact-decorate ^master \"${@:-HEAD}\"' -"
	lgs = log --pretty=fuller --stat
	lgs1 = log --pretty=fuller --stat -n 1
	lgsm = "!sh -c 'git log --pretty=fuller --stat ^master \"${@:-HEAD}\"' -"
	df = diff
	dfc = diff --cached
	df1 = "!sh -c 'git diff \"${1:-HEAD}\"^ \"${@:-HEAD}\"' -"
	df1n = "!sh -c 'git diff --name-only \"${1:-HEAD}\"^ \"${@:-HEAD}\"' -"
	dfm = "!sh -c 'git diff \"$(git merge-base master \"${1:-HEAD}\")\" \"$@\"' -"
	dfmn = "!sh -c 'git diff --name-only \"$(git merge-base master \"${1:-HEAD}\")\" \"$@\"' -"
	dfs = diff --stat
	dfsc = diff --stat --cached
	dfs1 = "!sh -c 'git diff --stat \"${1:-HEAD}\"^ \"${@:-HEAD}\"' -"
	dfsm = "!sh -c 'git diff --stat \"$(git merge-base master \"${1:-HEAD}\")\" \"$@\"' -"
	dfp = difftool --tool=pdiff
	dfpc = difftool --tool=pdiff --cached
	dfp1 = "!sh -c 'git difftool --tool=pdiff \"${1:-HEAD}\"^ \"${@:-HEAD}\"' -"
	dfpm = "!sh -c 'git difftool --tool=pdiff \"$(git merge-base master \"${1:-HEAD}\")\" \"$@\"' -"
	rmc = rm --cached
	rmcf = rm --cached --force
	sh = stash
	shl = stash list
	shs = stash save
	shw = stash show --patch
	sha = stash apply
	shp = stash pop
	shd = stash drop
	shc = stash clear
	ci = commit
	cav = commit --amend --verbose
	cava = commit --amend --verbose --all
	can = commit --amend --no-edit
	cana = commit --amend --no-edit --all
	canr = commit --amend --no-edit --reset-author
	co = checkout
	cob = checkout -b
	cobf = checkout -B
	cod = checkout --detach
	com = checkout master
	cor = "!sh -c 'git checkout -B \"${1:?unset}\" \"origin/$1\"' -"
	corm = checkout -B master origin/master
	hard = "!sh -c 'git reset --hard \"${@:-HEAD}\"' -"
	soft = "!sh -c 'git reset --soft \"${@:-HEAD}\"' -"
	cp = cherry-pick
	cpc = cherry-pick --continue
	cpa = cherry-pick --abort
	amc = am --continue
	ama = am --abort
	rb = rebase
	rbm = rebase master
	rbi = rebase --interactive
	rbim = rebase --interactive master
	rbir = rebase --interactive --root
	rbo = rebase --onto
	rbo1 = "!sh -c 'git rebase --onto \"${1:?unset}\" \"${2:?unset}\"^ \"${@:2}\"' -"
	rbom = rebase --onto master
	rbom1 = "!sh -c 'git rebase --onto master \"${1:?unset}\"^ \"$@\"' -"
	rbc = rebase --continue
	rbs = rebase --skip
	rba = rebase --abort
	xdn = clean -xd --dry-run
	xdnt = clean -xd --dry-run --exclude=tags --exclude=tags-metadata
	xdf = clean -xd --force
	xdft = clean -xd --force --exclude=tags --exclude=tags-metadata
	rt = remote
	rtv = remote --verbose
	fe = fetch --all --tags
	pl = pull --all --tags
	fadd = "!sh -c 'git fzf status-unstaged git add \"$@\" --' -"
	fco = "!sh -c 'git fzf status-unstaged git checkout \"$@\" --' -"
	frm = "!sh -c 'git fzf status-unstaged git rm \"$@\" --' -"
	freset = "!sh -c 'git fzf status git reset \"$@\" --' -"
	fvim = "!sh -c 'git fzf status-unstaged printf \"%s \" | xargs --open-tty vim \"$@\" --' -"
	fbr = "!sh -c 'git fzf branch \"$@\"' -"
	fbrco = "!sh -c 'git fzf branch git checkout \"$@\"' -"
	fbrd = "!sh -c 'git fzf branch git branch --delete \"$@\"' -"
	trace = "!sh -c 'GIT_TRACE=1 git \"$@\"' -"
